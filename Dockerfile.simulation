# Dockerfile.simulation
FROM ubuntu:22.04

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Build tools
    build-essential cmake ninja-build git curl wget \
    # Python development
    python3.10 python3.10-dev python3-pip python3-venv \
    # ROS2 Humble
    software-properties-common \
    # Gazebo simulation
    gazebo11 gazebo11-plugin-base libgazebo11-dev \
    # Network tools
    net-tools tcpdump wireshark-common \
    # Graphics (for Gazebo GUI)
    xvfb x11-apps mesa-utils \
    # Additional utilities
    vim nano htop tmux \
    && rm -rf /var/lib/apt/lists/*

# Install ROS2 Humble
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
    && apt-get update && apt-get install -y \
    ros-humble-desktop-full \
    ros-humble-gazebo-* \
    python3-colcon-common-extensions \
    && rm -rf /var/lib/apt/lists/*

# Install PX4 dependencies
RUN git clone https://github.com/PX4/PX4-Autopilot.git /opt/PX4-Autopilot \
    && cd /opt/PX4-Autopilot \
    && bash ./Tools/setup/ubuntu.sh --no-nuttx --no-sim-tools

# Install ns-3 network simulator
RUN git clone https://gitlab.com/nsnam/ns-3-dev.git /opt/ns-3-dev \
    && cd /opt/ns-3-dev \
    && ./ns3 configure --enable-python-bindings \
    && ./ns3 build

# Set up Python environment
COPY requirements.txt /tmp/requirements.txt
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

# Install additional quantum libraries
RUN pip3 install --no-cache-dir \
    qiskit[all]==0.45.0 \
    qiskit-aer==0.13.0 \
    cirq==1.2.0 \
    pennylane==0.32.0 \
    liboqs-python==0.8.0

# Create workspace
WORKDIR /workspace
RUN mkdir -p /workspace/{src,configs,data,models,logs}

# Set environment variables
ENV PYTHONPATH="/workspace/src:/opt/ns-3-dev/src/python"
ENV GAZEBO_MODEL_PATH="/workspace/models/gazebo:/usr/share/gazebo-11/models"
ENV ROS_DOMAIN_ID=42
ENV GAZEBO_MASTER_URI=http://localhost:11345

# Source ROS2 setup
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN echo "source /opt/PX4-Autopilot/Tools/simulation/gazebo-classic/setup_gazebo.bash /opt/PX4-Autopilot /opt/PX4-Autopilot/build/px4_sitl_default" >> ~/.bashrc

# Copy entrypoint script
COPY scripts/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

EXPOSE 8080 9090 3000

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["bash"] 